{"version":3,"sources":["webpack:///webpack/bootstrap 6f75388ccdb4e8855ace","webpack:///./src/childLogger.ts","webpack:///external \"bluebird\"","webpack:///./src/common.ts","webpack:///./src/connectionFactory.ts","webpack:///./src/consumer.ts","webpack:///./src/producer.ts","webpack:///./src/publisher.ts","webpack:///./src/subscriber.ts","webpack:///./src/main.ts","webpack:///external \"amqplib\""],"names":[],"mappings":"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","file":"dist/main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6f75388ccdb4e8855ace","import * as Logger from \"bunyan\";\n\nexport function createChildLogger(logger: Logger, className: string) {\n  return logger.child({ child: \"rabbitmq-pub-sub\", \"class\": className }, true);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/childLogger.ts","module.exports = require(\"bluebird\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bluebird\"\n// module id = 1\n// module chunks = 0","export interface IQueueNameConfig {\n  name: string;\n  dlq: string;\n  dlx: string;\n  exType: string;\n  bindKey: string;\n}\n\nexport class DefaultQueueNameConfig implements IQueueNameConfig{\n  dlq: string;\n  dlx: string;\n  exType: string;\n  bindKey: string;\n  constructor(public name: string){\n    this.dlq = `${name}.DLQ`;\n    this.dlx = `${this.dlq}.Exchange`;\n    this.exType = 'fanout';\n    this.bindKey = '';\n  }\n}\n\nexport class DefaultPubSubQueueConfig implements IQueueNameConfig{\n  dlq: string;\n  dlx: string;\n  exType: string;\n  bindKey: string;\n  constructor(public name: string){\n    this.dlq = '';\n    this.dlx = `${name}.DLQ.Exchange`\n    this.exType = 'fanout';\n    this.bindKey = '';\n  }\n}\n\nexport function asQueueNameConfig(config: IQueueNameConfig | string) : IQueueNameConfig{\n  return isQueueNameConfig(config) ? config : new DefaultQueueNameConfig(config);\n}\n\nexport function asPubSubQueueNameConfig(config: IQueueNameConfig | string) : IQueueNameConfig {\n  return isQueueNameConfig(config) ? config : new DefaultPubSubQueueConfig(config);\n}\n\nfunction isQueueNameConfig(config: IQueueNameConfig | string) : config is IQueueNameConfig{\n  if ((config as IQueueNameConfig).name && (config as IQueueNameConfig).dlq && (config as IQueueNameConfig).dlx) {\n    return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/common.ts","import * as amqp from \"amqplib\";\nimport * as Logger from \"bunyan\";\nimport * as Promise from \"bluebird\";\nimport {createChildLogger} from \"./childLogger\";\n\nexport interface IRabbitMqConnectionFactory {\n  create(): Promise<amqp.Connection>;\n}\n\nexport interface IRabbitMqConnectionConfig {\n  host: string;\n  port: number;\n}\n\nfunction isConnectionConfig(config: IRabbitMqConnectionConfig | string): config is IRabbitMqConnectionConfig {\n  if ((config as IRabbitMqConnectionConfig).host && (config as IRabbitMqConnectionConfig).port) {\n    return true;\n  }\n}\n\nexport class RabbitMqConnectionFactory implements IRabbitMqConnectionFactory {\n  private connection: string;\n  constructor(private logger: Logger, config: IRabbitMqConnectionConfig | string) {\n    this.connection = isConnectionConfig(config) ? `amqp://${config.host}:${config.port}` : config;\n    this.logger = createChildLogger(logger, \"RabbitMqConnectionFactory\");\n  }\n\n  create(): Promise<amqp.Connection> {\n    this.logger.debug(\"connecting to %s\", this.connection);\n    return Promise.resolve(amqp.connect(this.connection)).catch(err => {\n      this.logger.error(\"failed to create connection '%s'\", this.connection);\n      return Promise.reject(err);\n    });\n  }\n}\n\nexport class RabbitMqSingletonConnectionFactory implements IRabbitMqConnectionFactory {\n  private connection: string;\n  private promise: Promise<amqp.Connection>;\n  constructor(private logger: Logger, config: IRabbitMqConnectionConfig | string) {\n    this.connection = isConnectionConfig(config) ? `amqp://${config.host}:${config.port}` : config;\n  }\n\n  create(): Promise<amqp.Connection> {\n    if (this.promise) {\n      this.logger.trace(\"reusing connection to %s\", this.connection);\n      return this.promise;\n    }\n    this.logger.debug(\"creating connection to %s\", this.connection);\n    return this.promise = Promise.resolve(amqp.connect(this.connection));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/connectionFactory.ts","import * as amqp from \"amqplib\";\nimport {IRabbitMqConnectionFactory} from \"./connectionFactory\";\nimport * as Logger from \"bunyan\";\nimport * as Promise from \"bluebird\";\nimport {IQueueNameConfig, asQueueNameConfig} from \"./common\";\nimport {createChildLogger} from \"./childLogger\";\n\nexport interface IRabbitMqConsumerDisposer {\n  (): Promise<void>;\n}\n\nexport class RabbitMqConsumer {\n  constructor(private logger: Logger, private connectionFactory: IRabbitMqConnectionFactory) {\n    this.logger = createChildLogger(logger, \"RabbitMqConsumer\");\n  }\n\n  subscribe<T>(queue: string | IQueueNameConfig, action: (message: T) => Promise<any> | void): Promise<IRabbitMqConsumerDisposer> {\n    const queueConfig = asQueueNameConfig(queue);\n    return this.connectionFactory.create()\n      .then(connection => connection.createChannel())\n      .then(channel => {\n        this.logger.trace(\"got channel for queue '%s'\", queueConfig.name);\n        return this.setupChannel<T>(channel, queueConfig)\n          .then(() => this.subscribeToChannel<T>(channel, queueConfig, action))\n      });\n  }\n\n  private setupChannel<T>(channel: amqp.Channel, queueConfig: IQueueNameConfig) {\n    this.logger.trace(\"setup '%j'\", queueConfig);\n    return Promise.all(this.getChannelSetup(channel, queueConfig));\n  }\n\n  private subscribeToChannel<T>(channel: amqp.Channel, queueConfig: IQueueNameConfig, action: (message: T) => Promise<any> | void) {\n    this.logger.trace(\"subscribing to queue '%s'\", queueConfig.name);\n    return channel.consume(queueConfig.name, (message) => {\n      let msg: T;\n      Promise.try(() => {\n        msg = this.getMessageObject<T>(message);\n        this.logger.trace(\"message arrived from queue '%s' (%j)\", queueConfig.name, msg)\n        return action(msg);\n      }).then(() => {\n        this.logger.trace(\"message processed from queue '%s' (%j)\", queueConfig.name, msg)\n        channel.ack(message)\n      }).catch((err) => {\n        this.logger.error(err, \"message processing failed from queue '%j' (%j)\", queueConfig, msg);\n        channel.nack(message, false, false);\n      });\n    }).then(opts => {\n      this.logger.trace(\"subscribed to queue '%s' (%s)\", queueConfig.name, opts.consumerTag)\n      return (() => {\n        this.logger.trace(\"disposing subscriber to queue '%s' (%s)\", queueConfig.name, opts.consumerTag)\n        return Promise.resolve(channel.cancel(opts.consumerTag)).return();\n      }) as IRabbitMqConsumerDisposer\n    });\n  }\n\n  protected getMessageObject<T>(message: amqp.Message) {\n    return JSON.parse(message.content.toString('utf8')) as T;\n  }\n\n  protected getChannelSetup(channel: amqp.Channel, queueConfig: IQueueNameConfig) {\n    return [\n      channel.assertQueue(queueConfig.name, this.getQueueSettings(queueConfig.dlx)),\n      channel.assertQueue(queueConfig.dlq, this.getDLSettings()),\n      channel.assertExchange(queueConfig.dlx, 'fanout', this.getDLSettings()),\n      channel.bindQueue(queueConfig.dlq, queueConfig.dlx, '*')\n    ]\n  }\n\n  protected getQueueSettings(deadletterExchangeName: string): amqp.Options.AssertQueue {\n    var settings = this.getDLSettings();\n    settings.arguments = {\n      'x-dead-letter-exchange': deadletterExchangeName\n    }\n    return settings;\n  }\n\n  protected getDLSettings(): amqp.Options.AssertQueue {\n    return {\n      durable: true,\n      autoDelete: false\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/consumer.ts","import * as amqp from \"amqplib\";\nimport {IRabbitMqConnectionFactory} from \"./connectionFactory\";\nimport * as Logger from \"bunyan\";\nimport * as Promise from \"bluebird\";\nimport {IQueueNameConfig, asQueueNameConfig} from \"./common\";\nimport {createChildLogger} from \"./childLogger\";\n\nexport class RabbitMqProducer {\n  constructor(private logger: Logger, private connectionFactory: IRabbitMqConnectionFactory) {\n    this.logger = createChildLogger(logger, \"RabbitMqProducer\");\n  }\n\n  publish<T>(queue: string | IQueueNameConfig, message: T): Promise<void> {\n    const queueConfig = asQueueNameConfig(queue);\n    const settings = this.getQueueSettings(queueConfig.dlx);\n    return this.connectionFactory.create()\n      .then(connection => connection.createChannel())\n      .then(channel => {\n        return Promise.resolve(channel.assertQueue(queueConfig.name, settings)).then(() => {\n          if (!channel.sendToQueue(queueConfig.name, this.getMessageBuffer(message), { persistent: true })) {\n            this.logger.error(\"unable to send message to queue '%j' {%j}\", queueConfig, message)\n            return Promise.reject(new Error(\"Unable to send message\"))\n          }\n\n          this.logger.trace(\"message sent to queue '%s' (%j)\", queueConfig.name, message)\n        });\n      });\n  }\n\n  protected getMessageBuffer<T>(message: T) {\n    return new Buffer(JSON.stringify(message), 'utf8');\n  }\n\n  protected getQueueSettings(deadletterExchangeName: string): amqp.Options.AssertQueue {\n    return {\n      durable: true,\n      autoDelete: false,\n      arguments: {\n        'x-dead-letter-exchange': deadletterExchangeName\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/producer.ts","import * as amqp from \"amqplib\";\nimport { IRabbitMqConnectionFactory } from \"./connectionFactory\";\nimport * as Logger from \"bunyan\";\nimport * as Promise from \"bluebird\";\nimport { IQueueNameConfig, asPubSubQueueNameConfig } from \"./common\";\nimport { createChildLogger } from \"./childLogger\";\n\nexport class RabbitMqPublisher {\n    constructor(private logger: Logger, private connectionFactory: IRabbitMqConnectionFactory) {\n        this.logger = createChildLogger(logger, \"RabbitMqPublisher\");\n\n    }\n\n    publish<T>(queue: string | IQueueNameConfig, message: T): Promise<void> {\n        const queueConfig = asPubSubQueueNameConfig(queue);\n        const settings = this.getSettings();\n        return this.connectionFactory.create()\n            .then(connection => connection.createChannel())\n            .then(channel => {\n                this.logger.trace(\"got channel for exchange '%s'\", queueConfig.dlx);\n                return this.setupChannel<T>(channel, queueConfig)\n                    .then(() => {\n                        return Promise.resolve(channel.publish(queueConfig.dlx, '', this.getMessageBuffer(message))).then(() => {\n                            this.logger.trace(\"message sent to exchange '%s' (%j)\", queueConfig.dlx, message)\n                        });\n                    }).catch(() => {\n                         this.logger.error(\"unable to send message to exchange '%j' {%j}\", queueConfig.dlx, message)\n                        return Promise.reject(new Error(\"Unable to send message\"))\n                    })\n            });\n    }\n\n    private setupChannel<T>(channel: amqp.Channel, queueConfig: IQueueNameConfig) {\n        this.logger.trace(\"setup '%j'\", queueConfig);\n        return Promise.all(this.getChannelSetup(channel, queueConfig));\n    }\n\n    protected getMessageBuffer<T>(message: T) {\n        return new Buffer(JSON.stringify(message), 'utf8');\n    }\n\n    protected getChannelSetup(channel: amqp.Channel, queueConfig: IQueueNameConfig) {\n        return [\n            channel.assertExchange(queueConfig.dlx, 'fanout', this.getSettings()),\n        ]\n    }\n\n    protected getSettings(): amqp.Options.AssertQueue {\n        return {\n            durable: false,\n        }\n    }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/publisher.ts","import * as amqp from \"amqplib\";\nimport { IRabbitMqConnectionFactory } from \"./connectionFactory\";\nimport * as Logger from \"bunyan\";\nimport * as Promisefy from \"bluebird\";\nimport { IQueueNameConfig, asPubSubQueueNameConfig } from \"./common\";\nimport { createChildLogger } from \"./childLogger\";\n\nexport interface IRabbitMqSubscriberDisposer {\n    (): Promisefy<void>;\n}\n\nexport class RabbitMqSubscriber {\n\n    constructor(private logger: Logger, private connectionFactory: IRabbitMqConnectionFactory) {\n        this.logger = createChildLogger(logger, \"RabbitMqConsumer\");\n    }\n\n    subscribe<T>(queue: string | IQueueNameConfig, action: (message: T) => Promisefy<any> | void): Promisefy<IRabbitMqSubscriberDisposer> {\n        const queueConfig = asPubSubQueueNameConfig(queue);\n        return this.connectionFactory.create()\n            .then(connection => connection.createChannel())\n            .then(channel => {\n                this.logger.trace(\"got channel for queue '%s'\", queueConfig.name);\n                return this.setupChannel<T>(channel, queueConfig)\n                .then((queueName) => {\n                    this.logger.debug(\"queue name generated for subscription queue '(%s)' is '(%s)'\", queueConfig.name, queueName);\n                   var queConfig = { ...queueConfig, dlq: queueName}\n                    return this.subscribeToChannel<T>(channel, queueConfig, action)})\n            });\n    }\n\n    private setupChannel<T>(channel: amqp.Channel, queueConfig: IQueueNameConfig) {\n        this.logger.trace(\"setup '%j'\", queueConfig);\n        return this.getChannelSetup(channel, queueConfig);\n    }\n\n    private subscribeToChannel<T>(channel: amqp.Channel, queueConfig: IQueueNameConfig, action: (message: T) => Promisefy<any> | void) {\n        this.logger.trace(\"subscribing to queue '%s'\", queueConfig.name);\n        return channel.consume(queueConfig.dlq, (message) => {\n            let msg: T;\n            Promisefy.try(() => {\n                msg = this.getMessageObject<T>(message);\n                this.logger.trace(\"message arrived from queue '%s' (%j)\", queueConfig.name, msg)\n                return action(msg);\n            }).then(() => {\n                this.logger.trace(\"message processed from queue '%s' (%j)\", queueConfig.name, msg)\n                channel.ack(message)\n            }).catch((err) => {\n                this.logger.error(err, \"message processing failed from queue '%j' (%j)\", queueConfig, msg);\n                channel.nack(message, false, false);\n            });\n        }).then(opts => {\n            this.logger.trace(\"subscribed to queue '%s' (%s)\", queueConfig.name, opts.consumerTag)\n            return (() => {\n                this.logger.trace(\"disposing subscriber to queue '%s' (%s)\", queueConfig.name, opts.consumerTag)\n                return Promisefy.resolve(channel.cancel(opts.consumerTag)).return();\n            }) as IRabbitMqSubscriberDisposer\n        });\n    }\n\n    protected getMessageObject<T>(message: amqp.Message) {\n        return JSON.parse(message.content.toString('utf8')) as T;\n    }\n\n     protected async getChannelSetup(channel: amqp.Channel, queueConfig: IQueueNameConfig) {\n           await channel.assertExchange(queueConfig.dlx, queueConfig.exType , this.getDLSettings());\n           let result =  await channel.assertQueue(queueConfig.dlq, this.getQueueSettings(queueConfig.dlx));\n           await channel.bindQueue(result.queue, queueConfig.dlx, queueConfig.bindKey);\n           return result.queue;\n    }\n\n    protected getQueueSettings(deadletterExchangeName: string): amqp.Options.AssertQueue {\n        return {\n            exclusive: true\n        }\n    }\n\n    protected getDLSettings(): amqp.Options.AssertQueue {\n        return {\n            durable: false\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/subscriber.ts","export {IRabbitMqConnectionFactory,IRabbitMqConnectionConfig,RabbitMqConnectionFactory,RabbitMqSingletonConnectionFactory} from \"./connectionFactory\";\nexport {RabbitMqConsumer,IRabbitMqConsumerDisposer} from \"./consumer\";\nexport {RabbitMqProducer} from \"./producer\";\nexport {RabbitMqPublisher} from './publisher';\nexport {RabbitMqSubscriber} from './subscriber';\nexport {IQueueNameConfig} from \"./common\";\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","module.exports = require(\"amqplib\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"amqplib\"\n// module id = 9\n// module chunks = 0"],"sourceRoot":""}